Team emptyString -- Frank Chen, Max Millar, Daniel Jiang
APCS2 pd2
HW57 -- Changes in Latitude, Changes in Attitude
2018-06-03

Which jobs are most crucial?
	In order to create an AI for solving Minesweeper, it's necessary for us to
	construct the foundation for Minesweeper beforehand. Our group decided on
	first creating a playable Minesweeper game first to understand the basics
	and how the code would work. After that, an AI should be easier to create.

Which components constitute core functionality (vs non-essential)?
	Simply 2 classes would suffice: Driver and Square class. Driver would setup
	and run everything while the Square class will act either as a SAFE square,
 	or a MINE square. Originally, our plan was to have a NumberSquare class and 
	MineSquare class. But after much thought and discussions, we decided that we 
	can simply combine them into one Square class.

Which components are prerequisites for others?
	Completing the Square class first is necessary for the Driver class to work.
	However, it's recommended that we work simultaneously on both classes as its
	easier to debug and we can test the code as we work. The Solver class, however,
	must (not really but most recommended) be implemented after creating the Driver
	and Square class.

Which tasks can be delegated, and which must be collaboratively tackled?
	Coding can be collaboratively tackled; each member devotes a good portion
	of their time to the code every day but separately from one another. Tasks
	that can be delegated are updating the devlog and fleshing out the READ.me.

What is the timeline, and how does it accommodate setbacks, course changes?
	The timeline sets deadlines for the group to meet (obviously). It's importance
	lies in it's clarity of tasks and expected deliverables of each group member.
	It also helps enhance communication between the group as everyone would know
	exactly what's due on what day and what they have to do to contribute.